<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2ImageButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>